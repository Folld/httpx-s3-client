name: tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pylama:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: python -m pip install poetry
      - run: poetry install
      - run: poetry run pylama ./httpx_s3_client --ignore E501,W0611,E704,W291,E122,E128 --linters print,pyflakes,pycodestyle,mccabe --format pylint
        env:
          FORCE_COLOR: 1
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: python -m pip install poetry
      - run: poetry install
      - run: poetry run mypy
        env:
          FORCE_COLOR: 1

  tests:
    runs-on: ubuntu-latest
    services:
      s3:
        image: docker://adobe/s3mock
        ports:
          - 9090:9090
        env:
          initialBuckets: test

    strategy:
      fail-fast: false

      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    steps:
      - uses: actions/checkout@v2
      - name: Setup python${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python }}"

      - run: python -m pip install poetry
      - run: poetry install
      - run: >-
          poetry run pytest \
            -vv \
            --cov=aiohttp_s3_client \
            --cov-report=term-missing \
            tests
        env:
          FORCE_COLOR: 1
          S3_URL: http://user:hackme@localhost:9090/test/

      - run: poetry run coveralls
        env:
          COVERALLS_PARALLEL: 'true'
          COVERALLS_SERVICE_NAME: github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v1
      with:
        parallel-finished: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
